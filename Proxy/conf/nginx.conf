# Run as a unique, less privileged user for security reasons.
# Default: nobody nobody

# user www-data; #For ubuntu image only
user nginx;

# Determines whether nginx should become a daemon. [ When set to off, Runs nginx within a docker container 
# without halting ]
# Default : on

daemon off;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1

worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit

worker_rlimit_nofile 8192;

# The file storing the process ID of the main process
# Default: nginx.pid

pid /var/run/nginx.pid;



events {
  	# If you need more connections than this, you start optimizing your OS.
  	# That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
  	# Should be < worker_rlimit_nofile.
  	# Default: 512
  
	worker_connections 2048;

	# If multi_accept is disabled, a worker process will accept one new connection at a time.
	# Otherwise, a worker process will accept all new connections at a time.
	# Default: off

	multi_accept on;
}


http {

	# Hide nginx version information.
	# Default: on
	
	server_tokens off;

	# Specify MIME types for files.

	include /etc/nginx/mime.types;
	
	# Default: text/plain

	default_type  application/octet-stream;

	# Log access to this file
	# This is only used when you don't override it on a server{} level Default: 
	# logs/access.log combined

	access_log /dev/stdout;

	# Log errors and warnings to this file
	# This is only used when you don't override it on a server{} level
	# Default: logs/error.log error
	
	error_log  /dev/stderr;

	# How long to allow each connection to stay idle.
	# Longer values are better for each individual client, particularly for SSL,
	# but means that worker connections are tied up longer.
	# Default: 75s

	keepalive_timeout 20s;

	# Speed up file transfers by using sendfile() to copy directly
	# between descriptors rather than using read()/write().
	# For performance reasons, on FreeBSD systems w/ ZFS
	# this option should be disabled as ZFS's ARC caches
	# frequently used files in RAM by default.
	# Default: off

	sendfile on;

	# Don't send out partial frames; this increases throughput
	# since TCP frames are filled up before being sent out.
	# Default: off

	tcp_nopush on;

	# The TCP_NODELAY option allows to bypass Naggle, 
	# and then send the data as soon as its available.
	
	tcp_nodelay on;

	# Sets the maximum size of the types hash tables.
	# Default: 1024
	
	types_hash_max_size 2048;

	# Sets the maximum allowed size of the client request body, 
	# specified in the Content-Length request header field. 
	# If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is
 	# returned to the client. Please be aware that browsers cannot correctly display this error.
	# Setting size to 0 disables checking of client request body size.
	#Default: 1m

	client_max_body_size 2M;

	# Enable gzip compression.
	# Default: off

	gzip on;

	# Disables gzipping of responses for requests with User-Agent header fields 
	# matching any of the specified regular expressions.
	# Default : -
	gzip_disable "msie6";


	# Include files in the sites-available folder. server{} configuration files should be
  	# placed in the sites-available folder.
  
	include /etc/nginx/sites-available/*.conf;

	# Prevent nginx from locking files 
	
	open_file_cache off;

	# Adds the specified charset to the Content-Type response header field.
	# If this charset is different from the charset specified in the source_charset directive,
	# a conversion is performed. The parameter off cancels the addition of charset 
	# to the Content-Type response header field.
	# Default: off;

	 charset utf-8;
}
